# Title: Mydin processor app
# Date Commence: 15 May 2019
# By: IBU Analytics, Hanif, Al
# Maintainer: Hanif, Hafizuddin
# Objective: To create a mydin processor to extract mydin products in parellel
# Version: 1.0
# Date Modified: 21 Nov 2019
# Input Data:
# Output: mydin parser function

# R version 4.0.3 (2020-10-10)
# Platform: x86_64-pc-linux-gnu (64-bit)
# Running under: CentOS Linux 7 (Core)
# 
# Matrix products: default
# BLAS:   /d/sw/R/4.0.3/lib64/R/lib/libRblas.so
# LAPACK: /d/sw/R/4.0.3/lib64/R/lib/libRlapack.so
# 
# locale:
#   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
# [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
# [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
# [10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       
# 
# attached base packages:
#   [1] stats     graphics  grDevices utils     datasets  methods   base     
# 
# other attached packages:
#   [1] dplyr_1.0.6     stringr_1.4.0   netstat_0.1.1   RSelenium_1.7.7 rvest_0.3.6     xml2_1.3.2     
# 
# loaded via a namespace (and not attached):
#   [1] Rcpp_1.0.5       pillar_1.6.1     compiler_4.0.3   bitops_1.0-6     tools_4.0.3     
# [6] jsonlite_1.7.2   lifecycle_1.0.0  tibble_3.1.2     pkgconfig_2.0.3  rlang_0.4.10    
# [11] DBI_1.1.0        curl_4.3         yaml_2.2.1       binman_0.1.2     httr_1.4.2      
# [16] generics_0.1.0   vctrs_0.3.8      askpass_1.1      caTools_1.18.0   hms_0.5.3       
# [21] rappdirs_0.3.1   tidyselect_1.1.0 glue_1.4.2       R6_2.5.0         processx_3.4.5  
# [26] fansi_0.4.1      RMySQL_0.10.21   XML_3.99-0.6     blob_1.2.1       purrr_0.3.4     
# [31] readr_1.4.0      semver_0.2.0     selectr_0.4-2    magrittr_2.0.1   ps_1.5.0        
# [36] ellipsis_0.3.2   assertthat_0.2.1 utf8_1.1.4       stringi_1.5.3    openssl_1.4.3   
# [41] wdman_0.2.5      crayon_1.4.1   

# 1.0 To create function that runs the entire scraping process in parallel and writes to the database

processor = function(){
  source("tesco_scraper.R")
  source("tesco_cleaner.R")
  source("scraping_global.fcn.R")
  
  # creating Path for saving files
  tarikh = gsub("-","_",Sys.Date())
  rawpath = paste0('//d/dataSandbox/scraping/supermarket/tesco/data/tesco_raw/tesco_raw_',tarikh);path_checker(rawpath)
  parsepath = paste0('//d/dataSandbox/scraping/supermarket/tesco/data/tesco_parsed/tesco_parsed_',tarikh);path_checker(parsepath)
  
  # raw path is the name to save into server
  raw_path = paste0(rawpath, "/tesco_raw_", tarikh,".RDS")
  parse_path = paste0(parsepath, "/tesco_parsed_", tarikh,".RDS")
  
  # scrape and parse
  tesco_scrape = tesco_scraper()
  tesco_parse = tesco_parser(tesco_scrape)
  
  # save
  saveRDS(tesco_scrape, raw_path)
  saveRDS(tesco_parse, parse_path)
  
  # return parsed
  return(tesco_parse)
}

x = tryCatch(processor(), error = function(e){e})
if(inherits(x,"error")){
  library(telegram.bot)
  bot = Bot(token = "1352951378:AAFPJlWYXhRV7LUPNAF4XxpQqqJY3M1f8Bg")
  bot$sendMessage(chat_id = "-322882155", text = paste0("TESCO FAILED. ", geterrmessage()))
}